# -*- coding: utf-8 -*-
"""Copie de FR Python 1.1 Variables & Built-in functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WK8m0FedorbZ-rpwk1VPFCzY5rlHQ8W7

# Type

1. Dans la cellule de code ci-dessous, quel est, pour chaque cellule, le type de l'objet x ?  
`indice`: vous pouvez utiliser `type(x)` pour le révéler.

1.1
"""

x = 5
print(type(x))

"""1.2"""

x = "Hello World"
print(type(x))

"""1.3"""

x = 2.5
print(type(x))

"""1.4"""

x = ["mintcream", "burlywood", "salmon"]
print(type(x))

"""1.5"""

x = ("mintcream", "burlywood", "salmon")
print(type(x))

"""1.6"""

x = {"name": "Jules César", "Job": "Musician", "age": 55}
print(type(x))

"""1.7"""

x = True
print(type(x))

"""2. Maintenant, vous allez devoir convertir des objets d'un certain type, en un autre type d'objet.  
C'est parti !

2.1 Convertissez x en float.
"""

x = 5
x = float(x)
print(type(x))

"""2.2 Convertissez x en int"""

x = 5.4
x = int(x)
print(type(x))

"""2.3 Convertissez x en int"""

x = 5.6
x = int(x)
print(type(x))

"""2.4 Que pouvez-vous remarquer ?

Réponse:

Lorsque vous convertissez un float en int, Python ne fait pas d'arrondi. Il se contente de tronquer la partie décimale, ce qui signifie que tout nombre flottant avec une partie décimale (que ce soit 5.4 ou 5.6) sera réduit à l'entier inférieur (dans ces cas, 5).

2.5 Trouvez le moyen d'arrondir x.
"""

x = 5.6
x = round(x)
print(type(x))

"""2.6 Après avoir arrondi x, est-ce que x est toujours un `float` ?  
Réponse: Non c'est **int**

2.7 Ci-dessous, est-ce que x est un `int` ?
"""

x = 6.0
print(type(x))

"""2.8 Arrondissez x avec 3 valeurs décimales."""

x = 3.14159265359
x = round(x, 3)
print(x)

"""# Built-in Function

3.1 Utilisez une [built-in function](https://docs.python.org/3/library/functions.html) pour compter le nombre de lettres dans l'objet de type `string` suivant:
"""

x = "Hello World"
count = len(x)
print(count)

"""3.2 Utilisez une built-in function pour compter le nombre d'éléments dans l'objet de type `list` suivant:"""

x = ["non", "pas", 1, "ni", 2, "ni", 3, "mais", 7.2132]
count = len(x)
print(count)

"""3.3 Utilisez une built-in function sur une des deux variables pour que `resultat`  contienne une valeur positive."""

var_1 = 4
var_2 = -5

resultat = var_1 + abs(var_2)
print(resultat)

"""3.4 Utilisez une built-in function pour renvoyer la valeur minimum de la `list` suivante:"""

a_list = [3.2, 41, 2, 23, 7]
minimum_value = min(a_list)
print(minimum_value)


"""3.5 Utilisez une built-in function pour renvoyer la somme des valeurs de la `list` suivante:"""

a_list = [3.2, 41, 2, 23, 7]
total_sum = sum(a_list)
print(total_sum)
